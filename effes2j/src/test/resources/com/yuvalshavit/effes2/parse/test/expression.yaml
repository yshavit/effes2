name: var name
input: foo
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - foo (IDENT_NAME)
---
name: method invoke no args
input: foo()
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - foo (IDENT_NAME)
  - ArgsInvocation
---
name: method invoke one arg
input: foo(one)
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - foo (IDENT_NAME)
  - ArgsInvocation:
    - ExprVariableOrMethodInvocation:
      - QualifiedIdentName:
        - one (IDENT_NAME)
---
name: method invoke two args
input: foo(one, two)
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - foo (IDENT_NAME)
  - ArgsInvocation:
    - ExprVariableOrMethodInvocation:
      - QualifiedIdentName:
        - one (IDENT_NAME)
    - ExprVariableOrMethodInvocation:
      - QualifiedIdentName:
        - two (IDENT_NAME)
---
name: list is String
input: list is String
expected:
  ExprIsA:
  - ExprVariableOrMethodInvocation:
    - QualifiedIdentName:
      - list (IDENT_NAME)
  - MatcherWithPattern:
    - PatternType:
      - String (IDENT_TYPE)
---
name: list is Cons(*, *)
input: list is Cons(*, *)
expected:
  ExprIsA:
  - ExprVariableOrMethodInvocation:
    - QualifiedIdentName:
      - list (IDENT_NAME)
  - MatcherWithPattern:
    - PatternType:
      - Cons (IDENT_TYPE)
      - MatcherAny
      - MatcherAny
---
name: list is Cons(head, *)
input: list is Cons(head, *)
expected:
  ExprIsA:
  - ExprVariableOrMethodInvocation:
    - QualifiedIdentName:
      - list (IDENT_NAME)
  - MatcherWithPattern:
    - PatternType:
      - Cons (IDENT_TYPE)
      - MatcherJustName:
        - head (IDENT_NAME)
      - MatcherAny
---
name: list is Cons(head, tail)
input: list is Cons(head, tail)
expected:
  ExprIsA:
  - ExprVariableOrMethodInvocation:
    - QualifiedIdentName:
      - list (IDENT_NAME)
  - MatcherWithPattern:
    - PatternType:
      - Cons (IDENT_TYPE)
      - MatcherJustName:
        - head (IDENT_NAME)
      - MatcherJustName:
        - tail (IDENT_NAME)
---
name: var name
input: list
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - list (IDENT_NAME)
---
name: static var name
input: Something.list
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - QualifiedIdentType:
      - Something (IDENT_TYPE)
    - list (IDENT_NAME)
---
input: Stdio.stdin.readLine()
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - QualifiedIdentType:
      - Stdio (IDENT_TYPE)
    - QualifiedIdentNameMiddle:
      - stdin (IDENT_NAME)
    - readLine (IDENT_NAME)
  - ArgsInvocation
---
input: Stdio.stdin.readLine() is String
expected:
  ExprIsA:
  - ExprVariableOrMethodInvocation:
    - QualifiedIdentName:
      - QualifiedIdentType:
        - Stdio (IDENT_TYPE)
      - QualifiedIdentNameMiddle:
        - stdin (IDENT_NAME)
      - readLine (IDENT_NAME)
    - ArgsInvocation
  - MatcherWithPattern:
    - PatternType:
      - String (IDENT_TYPE)
---
input: Stdio.stdin.readLine() is line String
expected:
  ExprIsA:
  - ExprVariableOrMethodInvocation:
    - QualifiedIdentName:
      - QualifiedIdentType:
        - Stdio (IDENT_TYPE)
      - QualifiedIdentNameMiddle:
        - stdin (IDENT_NAME)
      - readLine (IDENT_NAME)
    - ArgsInvocation
  - MatcherWithPattern:
    - line (IDENT_NAME)
    - PatternType:
      - String (IDENT_TYPE)
---
name: 'False'
input: 'False'
expected:
  ExprInstantiation:
  - False (IDENT_TYPE)
---
name: 'One(ofUs)'
input: 'One(ofUs)'
expected:
  ExprInstantiation:
  - One (IDENT_TYPE)
  - ArgsInvocation:
    - ExprVariableOrMethodInvocation:
      - QualifiedIdentName:
        - ofUs (IDENT_NAME)
---
input: _pending
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - _pending (IDENT_NAME)
---
input: this._pending
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - QualifiedIdentThis
    - _pending (IDENT_NAME)
---
input: this.var1.meth().var2.var3
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - QualifiedIdentThis
    - QualifiedIdentNameMiddle:
      - var1 (IDENT_NAME)
    - QualifiedIdentNameMiddle:
      - meth (IDENT_NAME)
      - ArgsInvocation
    - QualifiedIdentNameMiddle:
      - var2 (IDENT_NAME)
    - var3 (IDENT_NAME)
---
name: static method
input: Foo.bar()
expected:
  ExprVariableOrMethodInvocation:
  - QualifiedIdentName:
    - QualifiedIdentType:
      - Foo (IDENT_TYPE)
    - bar (IDENT_NAME)
  - ArgsInvocation
