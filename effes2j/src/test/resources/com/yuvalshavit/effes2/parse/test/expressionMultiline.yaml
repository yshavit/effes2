name: if-is two
input: |
  if foo is:
    Bar: one
    *: two
expected:
  ExprIfIs:
  - ExprVariableOrMethodInvocation:
    - VarsAndMethods:
      - foo (IDENT_NAME)
  - ExpressionMatchers:
    - INDENT:
      - ExpressionMatcher:
        - MatcherWithPattern:
          - PatternType:
            - Bar (IDENT_TYPE)
        - ExprVariableOrMethodInvocation:
          - VarsAndMethods:
            - one (IDENT_NAME)
      - ExpressionMatcher:
        - MatcherWithPattern:
          - PatternAny
        - ExprVariableOrMethodInvocation:
          - VarsAndMethods:
            - two (IDENT_NAME)
---
name: if-is two
input: |
  if toks is:
      Cons(Arrow, @toks): True
      *: False
expected:
  ExprIfIs:
  - ExprVariableOrMethodInvocation:
    - VarsAndMethods:
      - toks (IDENT_NAME)
  - ExpressionMatchers:
    - INDENT:
      - ExpressionMatcher:
        - MatcherWithPattern:
          - PatternType:
            - Cons (IDENT_TYPE)
            - MatcherWithPattern:
              - PatternType:
                - Arrow (IDENT_TYPE)
            - MatcherJustName:
              - '@toks (IDENT_NAME)'
        - ExprInstantiation:
          - True (IDENT_TYPE)
      - ExpressionMatcher:
        - MatcherWithPattern:
          - PatternAny
        - ExprInstantiation:
          - False (IDENT_TYPE)
