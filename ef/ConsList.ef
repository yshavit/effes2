type Cons(head, tail)
type Empty

headIf(list) -> : # NOTE: no type checking for now, just marks that there's a rv
  # Returns the list's head, or False if it's empty
  return if list is:
    Cons(head, *): head
    *: False

toString(list) -> :
  sb = StringBuilder()
  sb.add("[")
  while list is Cons(@head, @tail):
    sb.add(head)
    list = tail
    if list is Cons(*,*):
      sb.add(", ")
  sb.add("]")
  return sb.get()

reverse(list):
  rv = Empty
  while list is Cons(head, *):
    rv = Cons(head, rv)
    list = head
  return rv

main(args) -> :
  lines = Empty
  while Stdio.in.readLine() is line String:
    lines = Cons(line, lines)
  Stdio.print(lines)
  Stdio.print("\n")
  Stdio.print(reverse(lines))
  Stdio.print("\n")
  return 0

